name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    
    name: Ubuntu ${{ matrix.os.name }} - ${{ matrix.compiler.name }}, ${{ matrix.portal.name }}, ${{ matrix.autoappend.name }}, ${{ matrix.shared_lib.name }}, C++${{ matrix.cppstd }}
    runs-on: ${{ matrix.os.label }}

    strategy:
      matrix:
        os: [ {label: ubuntu-latest, name: latest} ]
        portal: [ {flag: OFF, dep: libgtk-3-dev, name: GTK}, {flag: ON, dep: libdbus-1-dev, name: Portal} ] # The NFD_PORTAL setting defaults to OFF (i.e. uses GTK)
        autoappend: [ {flag: OFF, name: NoAppendExtn} ] # By default the NFD_PORTAL mode does not append extensions, because it breaks some features of the portal
        compiler: [ {c: gcc, cpp: g++, name: GCC}, {c: clang, cpp: clang++, name: Clang} ] # The default compiler is gcc/g++
        cppstd: [20, 11]
        shared_lib: [ {flag: OFF, name: Static} ]
        include:
        - os: {label: ubuntu-latest, name: latest}
          portal: {flag: ON, dep: libdbus-1-dev, name: Portal}
          autoappend: {flag: ON, name: AutoAppendExtn}
          compiler: {c: gcc, cpp: g++, name: GCC}
          cppstd: 11
          shared_lib: {flag: OFF, name: Static}
        - os: {label: ubuntu-latest, name: latest}
          portal: {flag: ON, dep: libdbus-1-dev, name: Portal}
          autoappend: {flag: ON, name: AutoAppendExtn}
          compiler: {c: clang, cpp: clang++, name: Clang}
          cppstd: 11
          shared_lib: {flag: OFF, name: Static}
        - os: {label: ubuntu-latest, name: latest}
          portal: {flag: ON, dep: libdbus-1-dev, name: Portal}
          autoappend: {flag: ON, name: NoAppendExtn}
          compiler: {c: gcc, cpp: g++, name: GCC}
          cppstd: 11
          shared_lib: {flag: ON, name: Shared}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        repository: 'btzy/nativefiledialog-extended'
        path: Upstream
    - name: Configure
      run: cd Upstream
    - name: Installing Dependencies
      run: sudo apt-get update && sudo apt-get install ${{ matrix.portal.dep }}
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.compiler.c }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }} -DCMAKE_CXX_STANDARD=${{ matrix.cppstd }} -DCMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_PORTAL=${{ matrix.portal.flag }} -DNFD_APPEND_EXTENSION=${{ matrix.autoappend.flag }} -DBUILD_SHARED_LIBS=${{ matrix.shared_lib.flag }} -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: Ubuntu ${{ matrix.os.name }} - ${{ matrix.compiler.name }}, ${{ matrix.portal.name }}, ${{ matrix.autoappend.name }}, ${{ matrix.shared_lib.name }}, C++${{ matrix.cppstd }}
        path: |
          build/src/*
          build/test/*
  
  build-macos-clang:

    name: MacOS latest - Clang, Shared
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        repository: 'btzy/nativefiledialog-extended'
        path: Upstream
    - name: Configure
      run: cd Upstream
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DBUILD_SHARED_LIBS=ON -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: MacOS latest - Clang, Shared
        path: |
          build/src/*
          build/test/*
  
  build-windows-msvc:

    name: Windows latest - MSVC, Shared
    runs-on: windows-latest
    
    strategy:
      matrix:
        shared_lib: [ {flag: ON, name: Shared} ]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        repository: 'btzy/nativefiledialog-extended'
        path: Upstream
    - name: Configure
      run: cd Upstream
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DBUILD_SHARED_LIBS=ON -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install --config Release
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: Windows latest - MSVC, Shared
        path: |
          build/src/Release/*
          build/test/Release/*