name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
  - cron: '0 0 * * 0' #once per week

jobs:
  build-ubuntu:

    name: Ubuntu - ${{ matrix.compiler.name }}, ${{ matrix.portal.name }}, ${{ matrix.autoappend.name }}, C++${{ matrix.cppstd }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        portal: [ {flag: OFF, dep: libgtk-3-dev, name: GTK}, {flag: ON, dep: libdbus-1-dev, name: Portal} ] # The NFD_PORTAL setting defaults to OFF (i.e. uses GTK)
        autoappend: [ {flag: OFF, name: NoAppendExtensions}, {flag: ON, name: AutoAppendExtensions} ] # By default the NFD_PORTAL mode does not append extensions, because it breaks some features of the portal
        compiler: [ {c: clang, cpp: clang++, name: Clang} ]
        cppstd: [20]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        repository: 'btzy/nativefiledialog-extended'
        path: Upstream
    - name: Installing Dependencies
      run: sudo apt-get update && sudo apt-get install ${{ matrix.portal.dep }}
    - name: Configure
      run: mkdir Upstream/build && mkdir Upstream/install && cd Upstream/build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.compiler.c }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }} -DCMAKE_CXX_STANDARD=${{ matrix.cppstd }} -DCMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_PORTAL=${{ matrix.portal.flag }} -DNFD_APPEND_EXTENSION=${{ matrix.autoappend.flag }} -DBUILD_SHARED_LIBS=ON -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build Upstream/build --target install
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: Ubuntu - ${{ matrix.compiler.name }}, ${{ matrix.portal.name }}, ${{ matrix.autoappend.name }}
        path: Upstream/build/src/*
        if-no-files-found: error

  build-macos:

    name: MacOS - Clang
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        repository: 'btzy/nativefiledialog-extended'
        path: Upstream
    - name: Configure
      run: mkdir Upstream/build && mkdir Upstream/install && cd Upstream/build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DBUILD_SHARED_LIBS=ON -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build Upstream/build --target install
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: MacOS - Clang
        path: Upstream/build/src/*
        if-no-files-found: error

  build-windows:

    name: Windows - MSVC, ${{ matrix.arch }}
    runs-on: windows-latest

    strategy:
      matrix:
        arch: [X86, X64, ARM64]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        repository: 'btzy/nativefiledialog-extended'
        path: Upstream
    - name: Configure
      run: mkdir Upstream/build && mkdir Upstream/install && cd Upstream/build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DBUILD_SHARED_LIBS=ON -DNFD_BUILD_TESTS=ON -DCMAKE_GENERATOR_PLATFORM=${{ matrix.arch }} ..
    - name: Build
      run: cmake --build Upstream/build --target install --config Release
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: Windows - MSVC, ${{ matrix.arch }}
        path: Upstream/build/src/Release/*
        if-no-files-found: error